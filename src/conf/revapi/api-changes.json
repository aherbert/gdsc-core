{
  "2.1" : [ {
    "extension" : "revapi.differences",
    "id" : "intentional-api-changes",
    "configuration" : {
      "differences" : [ {
        "code" : "java.method.addedToInterface",
        "new" : "method com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink::putBytes(java.nio.ByteBuffer)",
        "justification" : "This new method from a dependency is not used by the GDSC code."
      }, {
        "code" : "java.annotation.added",
        "new": {
          "matcher": "java",
          "match": "interface com.google.common.hash.** {}"
        },
        "justification" : "Ignore Guava annoations."
      }, {
        "code" : "java.field.constantValueChanged",
        "new": {
            "matcher": "java",
            "match": "type ij.ImageJ {}"
        },
        "justification" : "The ImageJ BUILD and VERSION has changed due to an ImageJ version update."
      }, {
        "code" : "java.class.defaultSerializationChanged",
        "new" : "class ij.gui.Roi",
        "justification" : "Serialization of an ImageJ ROI is not used by the GDSC code to persist state. ROIs can be saved/restored using ImageJ RoiEncoder and RoiDecoder classes via a byte[]."
      }, {
        "code": "java.method.visibilityIncreased",
        "new": {
          "matcher": "java",
          "match": "class ij.** {}"
        },
        "justification": "Latest ImageJ changes are allowed; code should be updated to be compatible."
      }, {
        "code": "java.class.removed",
        "old": "class uk.ac.sussex.gdsc.core.threshold.BesselK",
        "justification": "This class is a spurious commit and contains no functionality."
      } ]
    }
  } ],
  "2.2" : [ {
    "extension" : "revapi.differences",
    "id" : "intentional-api-changes",
    "configuration" : {
      "differences" : [ {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.commons.lang3.function.FailableBiConsumer<T, U, E extends java.lang.Throwable>",
        "justification" : "This new method from a dependency that is not used by the GDSC code."
      }, {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.commons.lang3.function.FailableBiFunction<T, U, R, E extends java.lang.Throwable>",
        "justification" : "This new method from a dependency that is not used by the GDSC code."
      }, {
        "code": "java.class.externalClassExposedInAPI",
        "new": "interface org.apache.commons.lang3.function.FailableFunction<T, R, E extends java.lang.Throwable>",
        "justification" : "This new method from a dependency that is not used by the GDSC code."
      },         {
        "code": "java.annotation.removed",
        "old": "interface com.google.common.hash.PrimitiveSink",
        "new": "interface com.google.common.hash.PrimitiveSink",
        "annotation": "@com.google.errorprone.annotations.CanIgnoreReturnValue",
        "justification" : "This annotation is not used by the GDSC code."
      },
      {
        "code": "java.method.numberOfParametersChanged",
        "old": "method java.awt.image.IndexColorModel ij.process.ImageProcessor::getThresholdColorModel()",
        "new": "method java.awt.image.IndexColorModel ij.process.ImageProcessor::getThresholdColorModel(byte[], byte[], byte[])",
        "justification": "Latest ImageJ changes are allowed; code should be updated to be compatible."
      },
      {
        "code": "java.method.nowStatic",
        "old": "method java.awt.image.IndexColorModel ij.process.ImageProcessor::getThresholdColorModel()",
        "new": "method java.awt.image.IndexColorModel ij.process.ImageProcessor::getThresholdColorModel(byte[], byte[], byte[])",
        "justification": "Latest ImageJ changes are allowed; code should be updated to be compatible."
      } ]
    }
  } ],
  "2.3" : [ {
    "extension": "revapi.java",
    "configuration": {
      "checks": {
        "varargOverloadsOnlyDifferInVarargParameter": {
          "reportUnchanged": false
        }
      }
    }
  } ]
}
